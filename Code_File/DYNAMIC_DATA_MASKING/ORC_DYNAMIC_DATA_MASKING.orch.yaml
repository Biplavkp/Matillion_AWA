type: "orchestration"
version: "1.0"
pipeline:
  components:
    Start 0:
      type: "start"
      transitions:
        unconditional:
        - "Create Table CREDIT CARD"
      skipped: false
      parameters:
        componentName: "Start 0"
    Create Table CREDIT CARD:
      type: "create-table-v2"
      transitions:
        success:
        - "GRANT ACCESS"
      skipped: false
      parameters:
        componentName: "Create Table CREDIT CARD"
        createMethod: "Replace"
        database: "DEMO_DATABASE"
        schema: "DEMO_SCHEMA"
        table: "CREDIT_CARD_CUSTOMERS"
        snowflakeTableType: "Permanent"
        columns:
        - - "CUST_ID"
          - "VARCHAR"
          - "20"
          - ""
          - ""
          - "Yes"
          - "Yes"
          - ""
          - ""
        - - "CREDIT_CARD_NUMBER"
          - "VARCHAR"
          - "19"
          - ""
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "BALANCE"
          - "NUMBER"
          - "10"
          - "2"
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "PURCHASES"
          - "NUMBER"
          - "10"
          - "2"
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "INSTALLMENTS_PURCHASES"
          - "NUMBER"
          - "10"
          - "2"
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "CASH_ADVANCE"
          - "NUMBER"
          - "10"
          - "2"
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "CREDIT_LIMIT"
          - "NUMBER"
          - "10"
          - "2"
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "PAYMENTS"
          - "NUMBER"
          - "10"
          - "2"
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "MINIMUM_PAYMENTS"
          - "NUMBER"
          - "10"
          - "2"
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "TENURE"
          - "NUMBER"
          - "10"
          - "2"
          - ""
          - "No"
          - "No"
          - ""
          - ""
        - - "DATE_OF_TXN"
          - "DATE"
          - ""
          - ""
          - ""
          - "No"
          - "No"
          - ""
          - ""
        defaultDdlCollation: ""
        primaryKeys:
        - "CUST_ID"
        clusteringKeys:
        dataRetentionTimeInDays: ""
        comment: ""
    GRANT ACCESS:
      type: "sql-script"
      transitions:
        success:
        - "Create File Format CSV"
      skipped: false
      parameters:
        componentName: "GRANT ACCESS"
        sqlScript: |-
          GRANT SELECT ON TABLE DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS TO ROLE ACCOUNTADMIN;
          GRANT SELECT ON TABLE DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS TO ROLE ACCOUNTADMIN;
          GRANT SELECT ON TABLE DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS TO ROLE ACCOUNTADMIN;
          GRANT SELECT ON TABLE DEMO_DATABASE.DEMO_SCHEMA.CREDIT_CARD_CUSTOMERS TO ROLE ACCOUNTADMIN;
    Create File Format CSV:
      type: "create-file-format"
      transitions:
        success:
        - "MASKING POLICY"
      skipped: false
      parameters:
        componentName: "Create File Format CSV"
        createReplace: "Create"
        database: "DEMO_DATABASE"
        schema: "DEMO_SCHEMA"
        fileFormatName: "CSV_FILE_FORMAT"
        fileType: "CSV"
        compression: "AUTO"
        recordDelimiter: ""
        fieldDelimiter: ","
        skipHeader: "1"
        skipBlankLines: "True"
        dateFormat: ""
        timeFormat: ""
        timestampFormat: ""
        escape: ""
        escapeUnenclosedField: ""
        trimSpace2: "False"
        fieldOptionallyEnclosed: ""
        nullIf2:
        errorOnColumnCountMismatch: "False"
        emptyFieldAsNull: "True"
        replaceInvalidCharacters: "False"
        encodingType: ""
    MASKING POLICY:
      type: "sql-script"
      transitions:
        success:
        - "Alter Masking Policy 0"
      skipped: false
      parameters:
        componentName: "MASKING POLICY"
        sqlScript: "CREATE MASKING POLICY IF NOT EXISTS MASK_CREDIT_CARDS AS (CREDIT_CARD_NUMBER\
          \ STRING) \nRETURNS STRING -> \nCASE \n   WHEN CURRENT_ROLE() IN ('DEVELOPER','ACCOUNTADMIN')\
          \ THEN CREDIT_CARD_NUMBER\n   WHEN CURRENT_ROLE() IN ('ANALYST') THEN REGEXP_REPLACE(CREDIT_CARD_NUMBER,\
          \ '^.{7}', '*******')\n   WHEN CURRENT_ROLE() IN ('TESTER') THEN '**********'\n\
          \   ELSE '***CAN NOT BE SEEN***'\nEND;"
    Alter Masking Policy 0:
      type: "unknown-orchestration"
      transitions:
        success:
        - "Python Script"
      skipped: false
      parameters:
        "1": "Alter Masking Policy 0"
        "2": "DEMO_DATABASE"
        "3": "DEMO_SCHEMA"
        "4": "Table"
        "5": "CREDIT_CARD_CUSTOMERS"
        "6":
          "1":
          - - "CREDIT_CARD_NUMBER"
            - "MASK_CREDIT_CARDS"
    Python Script:
      type: "python-script"
      transitions:
        success:
        - "File Iterator"
      skipped: false
      parameters:
        componentName: "Python Script"
        script: "###\n# Variables are directly accessible: \n#   print (myvar)\n#\
          \ Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n\
          # Grid Variables are accessible via the context:\n#   print (context.getGridVariable('mygridvar'))\n\
          # Updating a grid variable:\n#   context.updateGridVariable('mygridvar',\
          \ [['list','of'],['lists','!']])\n# A database cursor can be accessed from\
          \ the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select\
          \ count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n\
          import boto3\n\ns3_client = boto3.client('s3')\nbucket = 'matillionmaskeddatabucket'\n\
          prefix = 'DEV/Fileiterator'  \n\nlatest_file = None\nlatest_timestamp =\
          \ None\npaginator = s3_client.get_paginator('list_objects_v2')\n\n# Iterate\
          \ through pages\nfor page in paginator.paginate(Bucket=bucket, Prefix=prefix):\n\
          \    if 'Contents' in page:\n        for obj in page['Contents']:\n    \
          \        if latest_timestamp is None or obj['LastModified'] > latest_timestamp:\n\
          \                latest_timestamp = obj['LastModified']\n              \
          \  latest_file = obj['Key']\n    \n    # Print the latest file\nif latest_file:\n\
          \    print(f\"\\nLatest file: {latest_file}, Last Modified: {latest_timestamp}\"\
          )\n    context.updateVariable('LastLoadedFile', latest_file)\nelse:\n  \
          \  print(\"No files found in the S3 bucket.\")\n"
        interpreter: "Python 3"
        timeout: "360"
    S3 Load Data:
      type: "s3-load"
      skipped: false
      parameters:
        componentName: "S3 Load Data"
        stage: "[Custom]"
        authentication: "Credentials"
        s3ObjectPrefix: "s3://matillionmaskeddatabucket/DEV/Fileiterator/"
        pattern: "${jv_filename}"
        encryption: "None"
        warehouse: "DEMO_WAREHOUSE"
        database: "DEMO_DATABASE"
        schema: "DEMO_SCHEMA"
        targetTable: "CREDIT_CARD_CUSTOMERS"
        loadColumns:
        format: "[Custom]"
        fileType: "CSV"
        compression: "AUTO"
        recordDelimiter: ""
        fieldDelimiter: ","
        skipHeader: "1"
        skipBlankLines: "False"
        dateFormat: ""
        timeFormat: ""
        timestampFormat: ""
        escape: ""
        escapeUnenclosedField: ""
        trimSpace: "False"
        fieldOptionallyEnclosed: ""
        nullIf:
        errorOnColumnCountMismatch: "False"
        emptyFieldAsNull: "True"
        replaceInvalidCharacters: "False"
        encodingType: ""
        onError: "Abort Statement"
        sizeLimitB: ""
        purgeFiles: "False"
        truncateColumns: "False"
        forceLoad: "False"
    File Iterator:
      type: "file-iterator"
      iterationTarget: "S3 Load Data"
      skipped: false
      parameters:
        componentName: "File Iterator"
        inputDataType: "S3"
        inputDataUrl1: "s3://matillionmaskeddatabucket/DEV/Fileiterator/"
        inputDataUrl3: "Yes"
        maxIterations: "25"
        filterRegex: ".*"
        concurrency: "Sequential"
        variables:
        - - "jv_filename"
          - "Filename"
        breakOnFailure: "No"
  variables:
    jv_filename:
      metadata:
        type: "TEXT"
        description: ""
        scope: "SHARED"
        visibility: "PUBLIC"
      defaultValue: "customer_data_1"
design:
  components:
    Start 0:
      position:
        x: -736
        "y": -128
      tempMetlId: 1980
    Create Table CREDIT CARD:
      position:
        x: -592
        "y": -128
      tempMetlId: 1987
    GRANT ACCESS:
      position:
        x: -448
        "y": -128
      tempMetlId: 2037
    Create File Format CSV:
      position:
        x: -304
        "y": -128
      tempMetlId: 2082
    MASKING POLICY:
      position:
        x: -112
        "y": -128
      tempMetlId: 2124
    Alter Masking Policy 0:
      position:
        x: 64
        "y": -128
      tempMetlId: 2146
    Python Script:
      position:
        x: 208
        "y": -128
      tempMetlId: 2158
    S3 Load Data:
      position:
        x: 336
        "y": -128
      tempMetlId: 2269
    File Iterator:
      position:
        x: 336
        "y": -128
      tempMetlId: 2448
